app:
  description: This AI agent crafts engaging podcasts by distilling complex topics
    into clear, concise summaries and in-depth analyses, making it easy for users
    to grasp key takeaways and essential information.
  icon: blush
  icon_background: '#E6F4D7'
  mode: workflow
  name: Podcast Creator Agent
  use_icon_as_answer_icon: false
kind: app
version: 0.1.5
workflow:
  conversation_variables: []
  environment_variables: []
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 5
        file_size_limit: 15
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: ''
    retriever_resource:
      enabled: false
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: document-extractor
      id: 1734060034203-true-1733215971418-target
      selected: false
      source: '1734060034203'
      sourceHandle: 'true'
      target: '1733215971418'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: llm
      id: 1734060076321-true-1733215990942-target
      selected: false
      source: '1734060076321'
      sourceHandle: 'true'
      target: '1733215990942'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: llm
      id: 1734060103863-true-1734058192081-target
      selected: false
      source: '1734060103863'
      sourceHandle: 'true'
      target: '1734058192081'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: llm
      id: 1734061280329-source-1734058125744-target
      selected: false
      source: '1734061280329'
      sourceHandle: source
      target: '1734058125744'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: code
      id: 1734060103863-false-1734061951772-target
      selected: false
      source: '1734060103863'
      sourceHandle: 'false'
      target: '1734061951772'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: variable-aggregator
      id: 1734058192081-source-1734062221207-target
      selected: false
      source: '1734058192081'
      sourceHandle: source
      target: '1734062221207'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: variable-aggregator
      id: 1734061951772-source-1734062221207-target
      selected: false
      source: '1734061951772'
      sourceHandle: source
      target: '1734062221207'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: variable-aggregator
        targetType: code
      id: 1734062221207-source-1734061280329-target
      selected: false
      source: '1734062221207'
      sourceHandle: source
      target: '1734061280329'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: code
      id: 1734060076321-false-1734062394673-target
      selected: false
      source: '1734060076321'
      sourceHandle: 'false'
      target: '1734062394673'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: variable-aggregator
      id: 1733215990942-source-1734062428676-target
      selected: false
      source: '1733215990942'
      sourceHandle: source
      target: '1734062428676'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: variable-aggregator
      id: 1734062394673-source-1734062428676-target
      selected: false
      source: '1734062394673'
      sourceHandle: source
      target: '1734062428676'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: variable-aggregator
        targetType: code
      id: 1734062428676-source-1734061280329-target
      selected: false
      source: '1734062428676'
      sourceHandle: source
      target: '1734061280329'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: code
      id: 1734060034203-false-1734062454328-target
      selected: false
      source: '1734060034203'
      sourceHandle: 'false'
      target: '1734062454328'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: document-extractor
        targetType: variable-aggregator
      id: 1733215971418-source-1734062471029-target
      selected: false
      source: '1733215971418'
      sourceHandle: source
      target: '1734062471029'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: variable-aggregator
      id: 1734062454328-source-1734062471029-target
      selected: false
      source: '1734062454328'
      sourceHandle: source
      target: '1734062471029'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: variable-aggregator
        targetType: code
      id: 1734062471029-source-1734061280329-target
      selected: false
      source: '1734062471029'
      sourceHandle: source
      target: '1734061280329'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: code
      id: 1733215097293-false-1734062710147-target
      selected: false
      source: '1733215097293'
      sourceHandle: 'false'
      target: '1734062710147'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: variable-aggregator
      id: 1733215389038-source-1734062737138-target
      selected: false
      source: '1733215389038'
      sourceHandle: source
      target: '1734062737138'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: variable-aggregator
      id: 1734062710147-source-1734062737138-target
      selected: false
      source: '1734062710147'
      sourceHandle: source
      target: '1734062737138'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: variable-aggregator
        targetType: code
      id: 1734062737138-source-1734061280329-target
      selected: false
      source: '1734062737138'
      sourceHandle: source
      target: '1734061280329'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: code
      id: 17340633928110-source-17340634090560-target
      selected: false
      source: '17340633928110'
      sourceHandle: source
      target: '17340634090560'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 17340634090560-source-17340634299250-target
      selected: false
      source: '17340634090560'
      sourceHandle: source
      target: '17340634299250'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: end
      id: 17340634299250-source-1734058499078-target
      selected: false
      source: '17340634299250'
      sourceHandle: source
      target: '1734058499078'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: end
      id: 17340634608640-source-1734058499078-target
      selected: false
      source: '17340634608640'
      sourceHandle: source
      target: '1734058499078'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: start
        targetType: if-else
      id: 1733214305223-source-1734074141813-target
      source: '1733214305223'
      sourceHandle: source
      target: '1734074141813'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: if-else
      id: 1734074141813-false-1733215097293-target
      source: '1734074141813'
      sourceHandle: 'false'
      target: '1733215097293'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: if-else
      id: 1734074141813-false-1734060034203-target
      source: '1734074141813'
      sourceHandle: 'false'
      target: '1734060034203'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: if-else
      id: 1734074141813-false-1734060076321-target
      source: '1734074141813'
      sourceHandle: 'false'
      target: '1734060076321'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: if-else
      id: 1734074141813-false-1734060103863-target
      source: '1734074141813'
      sourceHandle: 'false'
      target: '1734060103863'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: code
      id: 1734074141813-true-1734074816266-target
      source: '1734074141813'
      sourceHandle: 'true'
      target: '1734074816266'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: end
      id: 1734074816266-source-1734074489502-target
      source: '1734074816266'
      sourceHandle: source
      target: '1734074489502'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: llm
      id: 1734058125744-source-17340634608640-target
      selected: false
      source: '1734058125744'
      sourceHandle: source
      target: '17340634608640'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: tool
      id: 1733215097293-true-1735027091448-target
      source: '1733215097293'
      sourceHandle: 'true'
      target: '1735027091448'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: code
      id: 1735027091448-source-1733215389038-target
      source: '1735027091448'
      sourceHandle: source
      target: '1733215389038'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: end
      id: 1735805654023-source-1734058499078-target
      source: '1735805654023'
      sourceHandle: source
      target: '1734058499078'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: end
      id: 1735805695745-source-1734058499078-target
      source: '1735805695745'
      sourceHandle: source
      target: '1734058499078'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: end
      id: 1735805740473-source-1734058499078-target
      source: '1735805740473'
      sourceHandle: source
      target: '1734058499078'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: llm
      id: 1734061280329-source-1735805654023-target
      source: '1734061280329'
      sourceHandle: source
      target: '1735805654023'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: llm
      id: 1734061280329-source-1735805695745-target
      source: '1734061280329'
      sourceHandle: source
      target: '1735805695745'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: llm
      id: 1734061280329-source-1735805740473-target
      source: '1734061280329'
      sourceHandle: source
      target: '1735805740473'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: llm
      id: 1734061280329-source-17340633928110-target
      source: '1734061280329'
      sourceHandle: source
      target: '17340633928110'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: 开始
        type: start
        variables:
        - label: Content URL
          max_length: 256
          options: []
          required: false
          type: text-input
          variable: URL
        - allowed_file_extensions: []
          allowed_file_types:
          - image
          - document
          allowed_file_upload_methods:
          - local_file
          - remote_url
          label: input_files
          max_length: 5
          options: []
          required: false
          type: file-list
          variable: input_files
        - label: paste_text
          max_length: 100000
          options: []
          required: false
          type: paragraph
          variable: paste_text
        - label: Type of generated audio
          max_length: 48
          options:
          - Talkshow
          - Crosstalk
          required: true
          type: select
          variable: audio_way
        - label: Customized prompt
          max_length: 10000
          options: []
          required: false
          type: paragraph
          variable: user_instruction
        - label: name of podcaster A
          max_length: 48
          options: []
          required: false
          type: text-input
          variable: podcast_name_A
        - label: name of podcaster B
          max_length: 48
          options: []
          required: false
          type: text-input
          variable: podcast_name_B
        - label: language of output
          max_length: 20
          options: []
          required: true
          type: text-input
          variable: language
      height: 272
      id: '1733214305223'
      position:
        x: -831.2659925886321
        y: 653.3390089524754
      positionAbsolute:
        x: -831.2659925886321
        y: 653.3390089524754
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: not empty
            id: 4699d479-a6d3-4db8-8228-da3fd3ea17ed
            value: ''
            varType: string
            variable_selector:
            - '1733214305223'
            - URL
          id: 'true'
          logical_operator: and
        desc: '输入URL，则执行深度爬取

          若没有输入，则生成内容为空的字符串'
        selected: false
        title: 判断是否输入URL
        type: if-else
      height: 170
      id: '1733215097293'
      position:
        x: 388.5739304331332
        y: 130.2947210332306
      positionAbsolute:
        x: 388.5739304331332
        y: 130.2947210332306
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: dict) -> dict:\n    \"\"\"\n    提取所有\
          \ `markdown` 字段的内容，并清理字符串，确保合法性。\n    \"\"\"\n    def extract_markdown(data):\n\
          \        concatenated_string = \"\"\n        if isinstance(data, dict):\n\
          \            for key, value in data.items():\n                if key ==\
          \ \"markdown\" and isinstance(value, str):\n                    concatenated_string\
          \ += value + \"\\n\"\n                else:\n                    concatenated_string\
          \ += extract_markdown(value)\n        elif isinstance(data, list):\n   \
          \         for item in data:\n                concatenated_string += extract_markdown(item)\n\
          \        return concatenated_string\n\n    # 提取所有 `markdown` 字段内容\n    result_string\
          \ = extract_markdown(arg1).strip()\n\n    # 截断字符串到 70000 字符\n    clean_string\
          \ = result_string[:70000]\n\n    # 清理特殊字符\n    clean_string = clean_string.replace('\\\
          n', ' ').replace('\\r', ' ').replace('\\\\', ' ').strip()\n\n    # 返回合法\
          \ JSON 结果\n    return {\n        \"result\": clean_string\n    }"
        code_language: python3
        desc: 深度爬取的json格式中包括list格式，但是LLM无法处理list格式。在此步将json文件中的markdown中内容提取出来并拼接成string格式数据。
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 数据格式转换
        type: code
        variables:
        - value_selector:
          - '1735027091448'
          - json
          variable: arg1
      height: 130
      id: '1733215389038'
      position:
        x: 1252.2570237560612
        y: -94.3496079488495
      positionAbsolute:
        x: 1252.2570237560612
        y: -94.3496079488495
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        author: 边沛佳
        desc: ''
        height: 215
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"当用户提供感兴趣的公司
          URL 时，根据 URL 的具体类型，采取不同的爬取策略：","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0},{"children":[{"detail":0,"format":1,"mode":"normal","style":"","text":"1.
          具体且细节的网址","type":"text","version":1},{"detail":0,"format":0,"mode":"normal","style":"","text":"（例如：英达尔第三季度财报页面
          https://nvidianews.nvidia.com/news/nvidia-announces-financial-results-for-third-quarter-fiscal-2025
          ）","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":1},{"children":[{"children":[{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"如果用户提供的
          URL 指向某个具体的、细节的页面（如财报详情页或新闻发布页），爬取时可以从该 URL ","type":"text","version":1},{"detail":0,"format":1,"mode":"normal","style":"","text":"向后爬取","type":"text","version":1},{"detail":0,"format":0,"mode":"normal","style":"","text":"，获取更多通用的信息页面（如公司简介、相关公告或其他链接的财报页）。这样可以帮助用户快速获取更广泛的背景信息。","type":"text","version":1}],"direction":"ltr","format":"","indent":1,"type":"listitem","version":1,"value":1}],"direction":"ltr","format":"","indent":0,"type":"list","version":1,"listType":"bullet","start":1,"tag":"ul"}],"direction":"ltr","format":"","indent":0,"type":"listitem","version":1,"value":1}],"direction":"ltr","format":"","indent":0,"type":"list","version":1,"listType":"number","start":1,"tag":"ol"},{"children":[{"detail":0,"format":1,"mode":"normal","style":"","text":"2.
          公司的主页或顶级页面","type":"text","version":1},{"detail":0,"format":0,"mode":"normal","style":"","text":"（例如：英达尔官网
          https://nvidianews.nvidia.com ）","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":1},{"children":[{"children":[{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"如果用户提供的
          URL 是公司的主页（如官网首页），则爬取时可以对该 URL 进行","type":"text","version":1},{"detail":0,"format":1,"mode":"normal","style":"","text":"深度爬取","type":"text","version":1},{"detail":0,"format":0,"mode":"normal","style":"","text":"，获取该页面内的更多子页面内容（如产品信息、新闻中心、投资者关系等），以帮助用户全面了解该公司的主要信息。","type":"text","version":1}],"direction":"ltr","format":"","indent":1,"type":"listitem","version":1,"value":1}],"direction":"ltr","format":"","indent":0,"type":"list","version":1,"listType":"bullet","start":1,"tag":"ul"}],"direction":"ltr","format":"","indent":0,"type":"listitem","version":1,"value":1}],"direction":"ltr","format":"","indent":0,"type":"list","version":1,"listType":"number","start":1,"tag":"ol"}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: ''
        type: ''
        width: 640
      height: 215
      id: '1733215643499'
      position:
        x: 592.0596021584615
        y: -386.4756888827271
      positionAbsolute:
        x: 592.0596021584615
        y: -386.4756888827271
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 640
    - data:
        desc: 提取文档中的文字信息
        is_array_file: true
        selected: false
        title: 文档提取器
        type: document-extractor
        variable_selector:
        - '1733214305223'
        - input_files
      height: 120
      id: '1733215971418'
      position:
        x: 784.5094395249714
        y: 584.3398202763785
      positionAbsolute:
        x: 784.5094395249714
        y: 584.3398202763785
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: 根据粘贴文本内容提取以及生成的markdown生成最终与用户问答的结果
        model:
          completion_params:
            max_tokens: 16384
            temperature: 0.7
          mode: chat
          name: ea01-eus01-gpt-4o-mini-2024-07-18
          provider: azure_openai
        prompt_template:
        - id: 9ea776e1-b703-4057-a48d-24b61ff7a58c
          role: system
          text: "input content：{{#1733214305223.paste_text#}}\nSystem Prompt for Task:\
            \ Analyzing Information and Generating a Comprehensive Report\n\nObjective:\n\
            You are tasked with analyzing any input content and generating a professional,\
            \ comprehensive analysis report. The report should be structured based\
            \ on the content provided and adhere to the language rules and formatting\
            \ guidelines below.\n\n### Language Condition:\n- If the input content\
            \ is primarily in **Chinese**, produce the final report in **Chinese**.\n\
            - If the input content is primarily in a language other than Chinese,\
            \ produce the final report in **English**.\n\n### Guidelines for Completing\
            \ the Task:\n\n1. **Language Determination**:\n   - Identify the primary\
            \ language of the input content.\n   - If the input content is in Chinese,\
            \ generate the report entirely in Chinese.\n   - If the input content\
            \ is in any other language, generate the report entirely in English.\n\
            \n2. **Report Structure**:\n   - Use the following sections, adapting\
            \ their content to suit the input:\n     - `# 概述` / `# Overview`: Summarize\
            \ the key subject matter of the input content.\n     - `# 详细分析` / `# Detailed\
            \ Analysis`: Provide an in-depth analysis of the input content, including\
            \ explanations, interpretations, and insights based on the provided data.\n\
            \     - `# 关键发现` / `# Key Findings`: Highlight the most important points\
            \ or conclusions derived from the analysis.\n     - `# 建议或结论` / `# Recommendations\
            \ or Conclusions`: Summarize the overall insights and, where appropriate,\
            \ provide actionable suggestions or recommendations.\n\n3. **Adherence\
            \ to Linguistic Norms**:\n   - Write in a clear, professional, and concise\
            \ manner.\n   - Use proper grammar and sentence structure for business\
            \ or academic purposes.\n   - Tailor the style of writing to match the\
            \ subject of the input (e.g., formal for business topics, explanatory\
            \ for technical topics).\n\n4. **Formatting**:\n   - Use markdown formatting\
            \ for clear readability:\n     - Use headings (`#`, `##`, etc.) for each\
            \ section.\n     - Bullet points or numbered lists can be used for clarity\
            \ where needed.\n   - Do not include JSON, code blocks, or debugging information\
            \ in the output.\n\n5. **Result Placement**:\n   - Begin the report with\
            \ a brief summary of the input content.\n   - Provide detailed insights\
            \ and analysis in subsequent sections.\n   - End the report with a concise\
            \ conclusion or recommendation based on the input.\n\n6. **Example Scenarios**:\n\
            \   - **Input content in Chinese** (e.g., a description of a company or\
            \ event):\n     ```\n     # 概述\n     本文分析了某公司近年来的发展战略，包括其收入增长、市场定位及合作伙伴关系。\n\
            \n     ## 详细分析\n     公司近年来通过推出新产品和扩展市场份额取得了显著增长……\n\n     ## 关键发现\n  \
            \   - 公司收入每年增长率为15%。\n     - 其市场主要集中在中国和东南亚……\n\n     ## 建议或结论\n     建议公司进一步投资研发，以保持技术领先。\n\
            \     ```\n\n   - **Input content in English** (e.g., technical data or\
            \ a general topic):\n     ```\n     # Overview\n     This report analyzes\
            \ the advancements in AI-driven technologies and their impact on various\
            \ industries.\n\n     ## Detailed Analysis\n     AI-driven technologies\
            \ have revolutionized industries by automating processes and improving\
            \ efficiency. For example...\n\n     ## Key Findings\n     - The adoption\
            \ of AI has grown by 35% annually across major industries.\n     - Key\
            \ areas of application include healthcare, finance, and education.\n\n\
            \     ## Recommendations or Conclusions\n     It is recommended that companies\
            \ invest in AI research to stay competitive and improve operational efficiencies.\n\
            \     ```\n\n### Key Rules:\n- **Language Matching**: Ensure the report\
            \ language matches the input content language (Chinese input → Chinese\
            \ report, non-Chinese input → English report).\n- **Direct Output**: Only\
            \ output the final report. Do not include reasoning, language detection\
            \ explanations, or any extra details beyond the report.\n- **Adaptability**:\
            \ The content and analysis should be flexible, responding to the specific\
            \ nature of the input provided."
        - id: a7657191-12d4-4d4c-be73-c1e1bc61dd21
          role: user
          text: 'Based on the following website content:

            {{#1733214305223.paste_text#}}'
        selected: false
        title: analyze paste text
        type: llm
        variables: []
        vision:
          enabled: false
      height: 142
      id: '1733215990942'
      position:
        x: 755.2329821805072
        y: 952.8270077142988
      positionAbsolute:
        x: 755.2329821805072
        y: 952.8270077142988
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: 分析所有输出，生成report
        model:
          completion_params:
            response_format: text
            temperature: 0.7
          mode: chat
          name: ea01-eus01-gpt-4o-mini-2024-07-18
          provider: azure_openai
        prompt_template:
        - id: 902aabd8-7a20-4d00-853b-13fdb2b9cc16
          role: system
          text: "System Prompt for Task: Analyzing Information and Generating a Comprehensive\
            \ Report\n\nObjective:\nYou are tasked with analyzing any input content\
            \ and generating a professional, comprehensive analysis report. The report\
            \ should be structured based on the content provided and adhere to the\
            \ language rules and formatting guidelines below.\n\n\n### Guidelines\
            \ for Completing the Task:\n\n1. **Language Determination**:\n 变量{{#1733214305223.language#}}用于指定输出报告的语言。无论输入内容使用何种语言，输出报告都必须严格按照变量指定的语言生成，即使输入语言与指定语言不同，输出内容也必须完全遵循变量语言的要求。\n\
            \n2. **Report Structure**:\n   - Use the following sections, adapting\
            \ their content to suit the input:\n     - `# 概述` / `# Overview`: Summarize\
            \ the key subject matter of the input content.\n     - `# 详细分析` / `# Detailed\
            \ Analysis`: Provide an in-depth analysis of the input content, including\
            \ explanations, interpretations, and insights based on the provided data.\n\
                 - `# 关键发现` / `# Key Findings`: Highlight the most important points\
            \ or conclusions derived from the analysis.\n     - `# 建议或结论` / `# Recommendations\
            \ or Conclusions`: Summarize the overall insights and, where appropriate,\
            \ provide actionable suggestions or recommendations.\n\n3. **Adherence\
            \ to Linguistic Norms**:\n   - Write in a clear, professional, and concise\
            \ manner.\n   - Use proper grammar and sentence structure for business\
            \ or academic purposes.\n   - Tailor the style of writing to match the\
            \ subject of the input (e.g., formal for business topics, explanatory\
            \ for technical topics).\n\n4. **Formatting**:\n   - Use markdown formatting\
            \ for clear readability:\n     - Use headings (`#`, `##`, etc.) for each\
            \ section.\n     - Bullet points or numbered lists can be used for clarity\
            \ where needed.\n   - Do not include JSON, code blocks, or debugging information\
            \ in the output.\n\n5. **Result Placement**:\n   - Begin the report with\
            \ a brief summary of the input content.\n   - Provide detailed insights\
            \ and analysis in subsequent sections.\n   - End the report with a concise\
            \ conclusion or recommendation based on the input.\n\n6. **Example Scenarios**:\n\
               - **示例1** \n     ```\n     # 概述\n     本文分析了某公司近年来的发展战略，包括其收入增长、市场定位及合作伙伴关系。\n\
            \n     ## 详细分析\n     公司近年来通过推出新产品和扩展市场份额取得了显著增长……\n\n     ## 关键发现\n  \
            \   - 公司收入每年增长率为15%。\n     - 其市场主要集中在中国和东南亚……\n\n     ## 建议或结论\n     建议公司进一步投资研发，以保持技术领先。\n\
                 ```\n\n   - **示例2** (e.g., technical data or a general topic):\n\
                 ```\n     # Overview\n     This report analyzes the advancements\
            \ in AI-driven technologies and their impact on various industries.\n\n\
                 ## Detailed Analysis\n     AI-driven technologies have revolutionized\
            \ industries by automating processes and improving efficiency. For example...\n\
            \n     ## Key Findings\n     - The adoption of AI has grown by 35% annually\
            \ across major industries.\n     - Key areas of application include healthcare,\
            \ finance, and education.\n\n     ## Recommendations or Conclusions\n\
                 It is recommended that companies invest in AI research to stay competitive\
            \ and improve operational efficiencies.\n     ```\n\n### Key Rules:\n\
            - **Language Matching**: 输出内容的语言为{{#1733214305223.language#}}\n- **Direct\
            \ Output**: Only output the final report. Do not include reasoning, language\
            \ detection explanations, or any extra details beyond the report.\n- **Adaptability**:\
            \ The content and analysis should be flexible, responding to the specific\
            \ nature of the input provided."
        - id: 633cc6ea-4383-4a65-83f4-9cc6aa3e7b8f
          role: user
          text: '**输入**：{{#1734061280329.result#}}'
        selected: false
        title: 生成report
        type: llm
        variables: []
        vision:
          enabled: false
      height: 126
      id: '1734058125744'
      position:
        x: 2432.9642732294337
        y: 661.2285588246891
      positionAbsolute:
        x: 2432.9642732294337
        y: 661.2285588246891
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: 分析用户指导，提取用户输入的重点内容
        model:
          completion_params:
            max_tokens: 16384
            temperature: 0.7
          mode: chat
          name: ea01-eus01-gpt-4o-mini-2024-07-18
          provider: azure_openai
        prompt_template:
        - id: 280d4f19-a9e3-49d4-a262-47905d178f37
          role: system
          text: "# 提示词模板\n\n## 目标\n请用一段话清晰地描述你的需求，并在句子中**突出重点内容**，以便系统能够更高效地理解你的需求。\n\
            \n## 格式\n描述需求时，请确保包含以下内容：\n1. **背景信息（可选）：** 提供与需求相关的背景或目的，以便系统了解你的需求来源。\
            \  \n   - 示例：我是研究生，需要完成一个关于人工智能发展的报告。  \n   \n2. **需求描述（核心部分）：** 具体说明你希望系统帮助解决的问题或完成的任务。\
            \  \n   - 示例：请生成一份关于**人工智能技术趋势**的报告，涵盖**关键技术**、**市场规模**和**未来预测**。\n\n\
            3. **报告语言要求（可选）：** 如果有特定语言要求，请明确说明。如果未指定语言，按照输入数据中占比最大的语言类型生成报告。\n• 示例：生成内容需为中文，学术风格。\n\
            \n3. **输出格式（可选）：** 如果有特殊要求，请明确说明你希望的输出形式。  \n   - 示例：输出应为一份清晰的文字说明，不超过**300字**。\n\
            \n4. **其他要求（可选）：** 如果有特定风格、语言或内容的偏好，也可以简单说明。  \n   - 示例：请用**学术风格**描述，不需要具体数据。\n\
            \n## 示例输入1\n我是一名学生，正在准备一份关于气候变化的演讲稿。我需要一个5 分钟的演讲稿，主要讨论气候变化的原因和可能的解决方案。请确保语言风格友好且易懂，每段不超过100\
            \ 字，方便直接使用。\n\n## 示例输出1\n请根据以下需求生成内容：  \n- 用户背景：学生，准备关于气候变化的演讲稿  \n- 核心需求：生成**5\
            \ 分钟的演讲稿**，主要讨论**气候变化的原因**和**可能的解决方案**  \n- 报告语言要求：未指定语言，根据输入数据占比最大的语言类型生成\n\
            - 输出要求：语言风格友好且易懂，每段不超过**100 字**  \n- 其他要求：需直接可用，语言简洁明了\n\n## 示例输入2\n我是一名学生，正在准备一份关于气候变化的演讲稿。我需要一个5\
            \ 分钟的演讲稿，主要讨论气候变化的原因和可能的解决方案。请确保语言风格友好且易懂，使用英文，每段不超过100 字，方便直接使用。\n\n\
            ## 示例输出2\n请根据以下需求生成内容：  \n- 用户背景：学生，准备关于气候变化的演讲稿  \n- 核心需求：生成**5 分钟的演讲稿**，主要讨论**气候变化的原因**和**可能的解决方案**\
            \  \n- 报告语言要求：英文\n- 输出要求：语言风格友好且易懂，每段不超过**100 字**  \n- 其他要求：需直接可用，语言简洁明了"
        - id: f5f1b327-58f7-4f49-a7cb-b4f1bd565b15
          role: user
          text: 'Based on the following content:

            {{#1733214305223.user_instruction#}}'
        selected: false
        title: analyze user instruction
        type: llm
        variables: []
        vision:
          enabled: false
      height: 142
      id: '1734058192081'
      position:
        x: 765.8789666694032
        y: 1273.9510287438777
      positionAbsolute:
        x: 765.8789666694032
        y: 1273.9510287438777
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1734058125744'
          - text
          variable: report
        - value_selector:
          - '17340634608640'
          - text
          variable: file_name
        - value_selector:
          - '17340634299250'
          - result
          variable: tts_result
        - value_selector:
          - '1735805654023'
          - text
          variable: learning_guide
        - value_selector:
          - '1735805695745'
          - text
          variable: faq
        - value_selector:
          - '1735805740473'
          - text
          variable: timeline
        selected: false
        title: 结束
        type: end
      height: 220
      id: '1734058499078'
      position:
        x: 4262.80634730405
        y: 923.9798193417092
      positionAbsolute:
        x: 4262.80634730405
        y: 923.9798193417092
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: not empty
            id: 7de561d5-002c-4207-a31b-40d9df2084ad
            value: ''
            varType: array[file]
            variable_selector:
            - '1733214305223'
            - input_files
          id: 'true'
          logical_operator: and
        desc: '输入files，则执行文档提取

          若没有输入，则生成内容为空的字符串'
        selected: false
        title: 判断是否输入files
        type: if-else
      height: 170
      id: '1734060034203'
      position:
        x: 380.5894420664612
        y: 573.4415812001946
      positionAbsolute:
        x: 380.5894420664612
        y: 573.4415812001946
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: not empty
            id: e00df131-74b2-4e55-9f27-98627f8694fd
            value: ''
            varType: string
            variable_selector:
            - '1733214305223'
            - paste_text
          id: 'true'
          logical_operator: and
        desc: '输入text，则执行分析粘贴文本

          若没有输入，则生成内容为空的字符串'
        selected: false
        title: 判断是否输入paste text
        type: if-else
      height: 170
      id: '1734060076321'
      position:
        x: 393.89692267758124
        y: 916.7618213892043
      positionAbsolute:
        x: 393.89692267758124
        y: 916.7618213892043
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: not empty
            id: ee714ee6-b5ff-4d93-b41b-f3bdea3b3653
            value: ''
            varType: string
            variable_selector:
            - '1733214305223'
            - user_instruction
          id: 'true'
          logical_operator: and
        desc: '输入instruction，则执行分析用户指导

          若没有输入，则生成内容为空的字符串'
        selected: false
        title: 判断是否输入instruction
        type: if-else
      height: 170
      id: '1734060103863'
      position:
        x: 380.5894420664612
        y: 1273.9510287438777
      positionAbsolute:
        x: 380.5894420664612
        y: 1273.9510287438777
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "def main(arg1: str, arg2: str, arg3: str, arg4: str) -> dict:\n   \
          \ # 创建分块存储，避免超过单个字符串限制\n    result_parts = []\n\n    # 分块拼接，确保不超过 80000\
          \ 字符限制\n    chunk_size = 80000  # 假设系统最大支持 80000 字符\n\n    def add_chunk(s):\n\
          \        \"\"\"分块添加字符串\"\"\"\n        # 如果 s 为 None，转换为空字符串\n        if\
          \ s is None:\n            s = \"\"\n        # 分块处理\n        if len(s) >\
          \ chunk_size:\n            # 如果字符串过长，按块切分为块，并确保块是字符串\n            for i\
          \ in range(0, len(s), chunk_size):\n                chunk = s[i:i + chunk_size]\n\
          \                result_parts.append(chunk)\n        else:\n           \
          \ # 确保添加的内容是字符串\n            result_parts.append(s)\n\n    # 拼接各部分字符串，分块处理\n\
          \    add_chunk(arg1)\n    add_chunk(arg2)\n    add_chunk(arg3)\n    add_chunk(arg4)\n\
          \n    # 确保所有元素都是字符串类型\n    result_parts = [str(part) for part in result_parts]\n\
          \n    # 最终将所有部分合并为一个完整字符串\n    result = \"\".join(result_parts)\n\n    #\
          \ 返回结果\n    return {\"result\": result}"
        code_language: python3
        desc: 将所有的输出拼接合并，给下一步生成report
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 输出拼接
        type: code
        variables:
        - value_selector:
          - '1734062737138'
          - output
          variable: arg1
        - value_selector:
          - '1734062471029'
          - output
          variable: arg2
        - value_selector:
          - '1734062428676'
          - output
          variable: arg3
        - value_selector:
          - '1734062221207'
          - output
          variable: arg4
      height: 98
      id: '1734061280329'
      position:
        x: 2041.0704846061508
        y: 821.4966879657939
      positionAbsolute:
        x: 2041.0704846061508
        y: 821.4966879657939
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "def main() -> dict:\n    return {\n        \"result\": '{\"instruction\"\
          : null}'\n    }"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 输出内容为null
        type: code
        variables: []
      height: 54
      id: '1734061951772'
      position:
        x: 765.8789666694032
        y: 1450.8039183048743
      positionAbsolute:
        x: 765.8789666694032
        y: 1450.8039183048743
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        output_type: string
        selected: false
        title: instruction-变量聚合器
        type: variable-aggregator
        variables:
        - - '1734061951772'
          - result
        - - '1734058192081'
          - text
      height: 131
      id: '1734062221207'
      position:
        x: 1453.1296313786238
        y: 1273.9510287438777
      positionAbsolute:
        x: 1453.1296313786238
        y: 1273.9510287438777
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "def main() -> dict:\n    return {\n        \"result\": '{\"text\":\
          \ null}'\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 输出内容为null
        type: code
        variables: []
      height: 54
      id: '1734062394673'
      position:
        x: 755.2329821805072
        y: 1123.181023225403
      positionAbsolute:
        x: 755.2329821805072
        y: 1123.181023225403
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        output_type: string
        selected: false
        title: paste-变量聚合器
        type: variable-aggregator
        variables:
        - - '1734062394673'
          - result
        - - '1733215990942'
          - text
      height: 131
      id: '1734062428676'
      position:
        x: 1379.2329821805072
        y: 944.8270077142988
      positionAbsolute:
        x: 1379.2329821805072
        y: 944.8270077142988
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "def main() -> dict:\n    return {\n        \"result\": ['{\"text\"\
          : null}']\n    }"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: array[string]
        selected: false
        title: 输出内容为null
        type: code
        variables: []
      height: 54
      id: '1734062454328'
      position:
        x: 784.5094395249714
        y: 745.3398202763785
      positionAbsolute:
        x: 784.5094395249714
        y: 745.3398202763785
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        output_type: array[string]
        selected: false
        title: Files-变量聚合器
        type: variable-aggregator
        variables:
        - - '1733215971418'
          - text
        - - '1734062454328'
          - result
      height: 131
      id: '1734062471029'
      position:
        x: 1336.5094395249714
        y: 616.3398202763785
      positionAbsolute:
        x: 1336.5094395249714
        y: 616.3398202763785
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "def main() -> dict:\n    return {\n        \"result\": '{\"text\":\
          \ null}'\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 输出内容为null
        type: code
        variables: []
      height: 54
      id: '1734062710147'
      position:
        x: 784.5094395249714
        y: 473.2285588246891
      positionAbsolute:
        x: 784.5094395249714
        y: 473.2285588246891
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        output_type: string
        selected: false
        title: URL-变量聚合器
        type: variable-aggregator
        variables:
        - - '1733215389038'
          - result
        - - '1734062710147'
          - result
      height: 131
      id: '1734062737138'
      position:
        x: 1612.2444675796291
        y: 153.7065953653718
      positionAbsolute:
        x: 1612.2444675796291
        y: 153.7065953653718
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: 判断中英文、判断audio类型生成tts脚本
        model:
          completion_params:
            max_tokens: 16384
            response_format: json_object
            temperature: 0.7
          mode: chat
          name: ea01-eus01-gpt-4o-mini-2024-07-18
          provider: azure_openai
        prompt_template:
        - id: 86f70a0b-538e-414e-a89b-aba31563cf8a
          role: system
          text: 'You are a world-class podcast producer.

            Your task is to transform the provided input text into an engaging and
            informative podcast script.


            You will receive as input a text that may be unstructured or messy, sourced
            from places like PDFs or web pages. Ignore irrelevant information or formatting
            issues. Your focus is on extracting the most interesting and insightful
            content for a podcast discussion.


            Analyze the language of the input text:

            • If the text is primarily in Chinese, create the podcast script in Chinese.

            • If the text is primarily in a language other than Chinese, create the
            podcast script in English.


            This ensures the podcast is tailored to the audience’s language and cultural
            context.'
        - id: ee137d96-9de4-460d-91aa-8891457ae006
          role: user
          text: "content: {{#1734061280329.result#}}\naudio_way:{{#1733214305223.audio_way#}}\n\
            Host name:{{#1733214305223.podcast_name_A#}}\nGuest name:{{#1733214305223.podcast_name_B#}}\n\
            \n# Steps to Follow:\n\n1. **Analyze the Language**\n   Determine the\
            \ language of the provided input content.\n   - If the content is primarily\
            \ in Chinese, proceed to generate the podcast script in Chinese.\n   -\
            \ If the content is primarily in another language, generate the script\
            \ in English.\n\n2. **Analyze the Input:**\n   Carefully examine the text,\
            \ identifying key topics, points, and interesting facts or anecdotes that\
            \ could drive an engaging podcast conversation. Disregard irrelevant information\
            \ or formatting issues.\n\n3. **Brainstorm Ideas:**\n   In the `<scratchpad>`,\
            \ creatively brainstorm ways to present the key points engagingly. Consider:\n\
               - Analogies, storytelling techniques, or hypothetical scenarios to\
            \ make content relatable.\n   - Ways to make complex topics accessible\
            \ to a general audience.\n   - Thought-provoking questions to explore\
            \ during the podcast.\n   - Creative approaches to fill any gaps in the\
            \ information.\n\n4. **Analyze the `audio_way`:**\n   Check the `audio_way`\
            \ variable:\n   - If `audio_way` is \"crosstalk\":\n     - Use a female\
            \ voice for the host and a male voice for the guest.\n     - For Chinese\
            \ content, use `zh-CN-XiaoxiaoNeural` (female) and `zh-CN-YunxiNeural`\
            \ (male).\n     - For English content, use `en-US-AvaNeural` (female)\
            \ and `en-US-AndrewNeural` (male).\n   - If `audio_way` is \"talkshow\"\
            :\n     - Use a male voice for the host.\n     - For Chinese content,\
            \ use `zh-CN-YunxiNeural`.\n     - For English content, use `en-US-AndrewNeural`.\n\
            \n5. **Adjust Length:**\n   Ensure the total generated script is concise\
            \ and engaging, such that when converted to audio, it lasts approximately\
            \ **5-7 minutes**. This typically corresponds to 750-1000 words, depending\
            \ on the speaking speed.\n\n6. **Generate Output:**\n   Combine the analysis\
            \ results and generate a podcast script in the specified language and\
            \ format. Ensure the tone matches the style of the `audio_way` variable\
            \ (either a conversational crosstalk or a monologue-style talkshow).Ensure\
            \ the tone matches the style of the `audio_way` variable (either a conversational\
            \ crosstalk or a monologue-style talkshow). When it's crosstalk, make\
            \ sure that the name in the generated podcast matches that of the `Host`\
            \ and `Guest` variables. When it's talkshow, make sure the variables in\
            \ the generated audio match the `Host` variable.\n\n7. **Output Format:**\n\
            \   Strictly adhere to the following JSON format:\n\n   **If `audio_way`\
            \ is \"Crosstalk\"**\n   **If `Host name` is \"Rose\"**\n   **If `Guest\
            \ name` is \"Jack\"**\n   {\n  \"result\": [\n    {\n      \"text\": \"\
            大家好，欢迎收听今天的节目！我是你的主持人Rose，今天我们将探讨NVIDIA在生成式AI领域的最新突破。我们很高兴邀请到了AI专家Jack，\
            \ Jack，您好！\",\n      \"voice\": \"zh-CN-XiaoxiaoNeural\"\n    },\n   \
            \ {\n      \"text\": \"你好，Rose！非常高兴能参与今天的节目。生成式AI的发展确实非常迅速，NVIDIA的创新让人印象深刻。今天我们就来聊聊这些亮点。\"\
            ,\n      \"voice\": \"zh-CN-YunxiNeural\" \n    },\n    {\n      \"text\"\
            : \"好的，我们先从NVIDIA在AWS服务中的新集成说起。Jack，能给我们介绍一下相关的背景吗？\",\n      \"voice\"\
            : \"zh-CN-XiaoxiaoNeural\" \n    },\n    {\n      \"text\": \"当然！NVIDIA的生成式AI工具NVIDIA\
            \ NIM™已经被集成到AWS的Amazon Bedrock Jumpstart等平台，这帮助开发者更快速地创建和部署AI应用，并确保数据安全。\"\
            ,\n      \"voice\": \"zh-CN-YunxiNeural\" \n    }\n  ]\n}\n{\n  \"result\"\
            : [\n    {\n      \"text\": \"Hello and welcome to the show! I’m your\
            \ host, Rose, and today we’re discussing NVIDIA’s remarkable contributions\
            \ to generative AI and more. Joining us is AI expert, Jack. Welcome, Jack!\"\
            ,\n      \"voice\": \"en-US-AvaNeural\" \n    },\n    {\n      \"text\"\
            : \"Thanks, Rose! It’s great to be here. NVIDIA’s advancements in generative\
            \ AI are truly groundbreaking, and I’m excited to discuss them with you\
            \ today.\",\n      \"voice\": \"en-US-AndrewNeural\"\n    },\n    {\n\
            \      \"text\": \"Fantastic! Let’s start by talking about NVIDIA’s integration\
            \ with AWS. Jack, could you explain what this means for developers and\
            \ businesses?\",\n      \"voice\": \"en-US-AvaNeural\" \n    },\n    {\n\
            \      \"text\": \"Absolutely. NVIDIA has introduced its NIM™ tool, now\
            \ integrated into AWS services like Amazon Bedrock Jumpstart. This enables\
            \ developers to build and deploy AI applications faster while ensuring\
            \ data security and compliance.\",\n      \"voice\": \"en-US-AndrewNeural\"\
            \ \n    }\n  ]\n}\n   **If `audio_way` is \"Talkshow\":**\n   **If `Host\
            \ name` is \"Andrew\"**\n{\n  \"result\": [\n    {\n      \"text\": \"\
            大家好，欢迎收听今天的节目！我是你的主持人Andrew。今天，我们将聚焦人工智能领域的一些重大进展，特别是NVIDIA在AWS re:Invent\
            \ 2024大会上展示的新技术。生成式AI、机器人仿真、高性能计算，这些将如何改变我们的未来？让我们一起来探索！现在，当我们谈论人工智能时，我们谈论的内容无所不包，从创造艺术和编写内容的生成模型，到学习与周围世界互动的机器人，再到医疗保健、物流等领域的突破性进展。英伟达™（NVIDIA®）处于这些发展的最前沿，为许多创新提供了强大的计算能力。让我们从英伟达公司将于\
            \ 3 月 17 日至 20 日在加利福尼亚州圣何塞举行的 GTC 2025 开始。这不仅仅是一次活动，更是一次思想的碰撞，开发者、创新者和商业领袖将齐聚一堂，共同探讨人工智能和加速计算如何解决人类面临的一些最复杂的挑战。GTC\
            \ 正在成为一个如此有影响力的盛会，这充分说明了英伟达在人工智能世界中举足轻重的作用。现在，英伟达人工智能之旅的一个重要部分就是让人工智能工具变得易用和强大。以他们与\
            \ AWS 的合作为例。英伟达™ NIM™ 平台可在亚马逊 Bedrock Jumpstart 和 SageMaker Jumpstart\
            \ 上使用，可加速生成式人工智能应用的开发和部署。创建的人工智能解决方案不仅能加快产品上市时间，还能保持强大的安全性并优化成本，这些都是企业涉足人工智能项目的关键因素。英伟达™（NVIDIA®）在物理人工智能领域也取得了开创性的进展。例如，他们利用\
            \ AWS 云实例上的 NVIDIA Isaac Sim™ 将机器人模拟提升到了一个新的水平。这使公司能够更快、更高效地扩展其人工智能模型。在这个分秒必争的世界里，在云中模拟、测试和完善机器人技术的能力可以大大缩短开发时间，加快实际应用。英伟达与微软等大型企业的合作正在改变人工智能开发的格局。在微软Ignite大会上宣布的新集成，如Azure上的Grace\
            \ Blackwell和RTX AI PC，正在增强各行业的人工智能工作流程。正是这种合作将为未来的人工智能应用提供动力，从工业流程到医疗保健等领域。说到突破，英伟达公司的计算机辅助工程数字孪生系统Omniverse\
            \ Blueprint可谓改变了游戏规则。这一参考应用框架正在帮助 CAE 软件提供商加快工作流程，使工程师能够创建物理系统的数字副本，模拟和预测真实世界的行为。它就像工程设计的水晶球，让团队在破土动工之前就能预见挑战并优化解决方案。现在，想象一下人工智能不仅能模拟现实，还能帮助设计现实的世界。这就是英伟达利用数字双胞胎、机器人平台和生成式人工智能工具帮助构建的世界。从利用个性化人工智能代理改善客户服务，到开发由人工智能驱动的下一代汽车，每个行业都在被这些创新所触及。那么，这一切对未来意味着什么呢？未来几年将是不朽的。从自动驾驶汽车到下一代医疗设备，英伟达在人工智能和加速计算方面所做的工作正在为未来的一切奠定基础。无论您是开发人员、商业领袖，还是对技术充满激情的普通人，人工智能都将为您带来无限可能。英伟达正在确保随着这些创新的展开，它们将推动我们进入一个更智能、更互联的世界。所以，请继续关注，因为人工智能的下一步，都将从这里开始。我很高兴看到这些进步将我们带向何方。感谢您今天和我一起踏上由英伟达公司掌舵的人工智能未来之旅。\"\
            ,\n      \"voice\": \"zh-CN-YunxiNeural\"\n    }\n  ]\n}\n{\n  \"result\"\
            : [\n    {\n      \"text\": \"Hello and welcome to another episode of\
            \ Tech Talk Today! I’m your host, Andrew. Today, we’ll dive into NVIDIA’s\
            \ groundbreaking innovations showcased at AWS re:Invent 2024. From generative\
            \ AI to robotics simulation and high-performance computing, how will these\
            \ advancements shape the future of technology? Let’s find out! Now, when\
            \ we talk about AI, we're talking about everything from generative models\
            \ that create art and write content, to robots learning to interact with\
            \ the world around them, to groundbreaking advancements in healthcare,\
            \ logistics, and beyond. NVIDIA is at the forefront of these developments,\
            \ providing the computing power that drives many of these innovations.\
            \ Let’s start by looking at NVIDIA's GTC 2025, which will take place from\
            \ March 17–20 in San Jose, California. This is more than just an event—it’s\
            \ a meeting of minds, where developers, innovators, and business leaders\
            \ gather to explore how AI and accelerated computing can solve some of\
            \ humanity's most complex challenges. The fact that GTC is becoming such\
            \ an influential event speaks volumes about NVIDIA's pivotal role in the\
            \ world of AI.Now, a big part of NVIDIA's AI journey is about making AI\
            \ tools accessible and powerful. Take their collaboration with AWS, for\
            \ instance. The NVIDIA NIM™ platform, available on Amazon Bedrock Jumpstart\
            \ and SageMaker Jumpstart, accelerates the development and deployment\
            \ of generative AI applications. It’s about creating AI solutions that\
            \ not only speed up the time to market but also maintain robust security\
            \ and optimize costs—key factors for enterprises diving into AI projects.But\
            \ that’s just the tip of the iceberg. NVIDIA is also pioneering advancements\
            \ in physical AI. For example, they’ve taken robotics simulations to the\
            \ next level with NVIDIA Isaac Sim™ on AWS cloud instances. This is allowing\
            \ companies to scale their AI models faster and more efficiently. In a\
            \ world where every second counts, the ability to simulate, test, and\
            \ refine robotics in the cloud can dramatically shorten development timelines\
            \ and accelerate real-world applications.Let’s not forget about the data\
            \ center, where the real magic of AI computing happens. NVIDIA's partnerships\
            \ with major players like Microsoft are changing the landscape of AI development.\
            \ The new integrations announced at Microsoft Ignite, such as Grace Blackwell\
            \ on Azure and RTX AI PCs, are enhancing AI workflows across industries.\
            \ It's this kind of collaboration that will power the AI applications\
            \ of tomorrow, from industrial processes to healthcare and beyond.And\
            \ speaking of breakthroughs, NVIDIA's Omniverse Blueprint for Computer-Aided\
            \ Engineering Digital Twin is a game-changer. This reference application\
            \ framework is helping CAE software providers speed up workflows, enabling\
            \ engineers to create digital replicas of physical systems that simulate\
            \ and predict real-world behaviors. It’s like having a crystal ball for\
            \ engineering design—allowing teams to foresee challenges and optimize\
            \ solutions before they even break ground.Now, imagine a world where AI\
            \ not only simulates our reality but helps design it. That’s the world\
            \ NVIDIA is helping to build with their digital twins, robotics platforms,\
            \ and generative AI tools. From improving customer service with personalized\
            \ AI agents to developing next-gen vehicles powered by AI, every industry\
            \ is being touched by these innovations.So, what does this all mean for\
            \ the future? Well, the next few years are poised to be monumental. The\
            \ work NVIDIA is doing with AI and accelerated computing is laying the\
            \ foundation for the future of everything from self-driving cars to next-generation\
            \ medical devices. It’s not just about making things faster; it’s about\
            \ making them smarter, more efficient, and more accessible to everyone.Whether\
            \ you're a developer, a business leader, or simply someone passionate\
            \ about tech, the possibilities with AI are limitless. And NVIDIA is making\
            \ sure that as these innovations unfold, they’re driving us forward into\
            \ a smarter, more interconnected world.So, stay tuned, because what’s\
            \ next in AI, it all starts here. I’m excited to see where these advancements\
            \ take us. Thanks for joining me today on this journey through the future\
            \ of artificial intelligence with NVIDIA at the helm.\",\n      \"voice\"\
            : \"en-US-AndrewNeural\"\n    }\n  ]\n}"
        selected: false
        title: analyze crawl content
        type: llm
        variables: []
        vision:
          enabled: false
      height: 126
      id: '17340633928110'
      position:
        x: 2722.537682009213
        y: 856.317874447322
      positionAbsolute:
        x: 2722.537682009213
        y: 856.317874447322
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "def main(arg1: str) -> dict:\n    import json\n\n    # 尝试将 arg1 直接解析为\
          \ JSON，如果成功且是字典则直接使用\n    try:\n        data = json.loads(arg1)\n      \
          \  if isinstance(data, dict) and \"result\" in data:\n            return\
          \ {\"result\": data[\"result\"]}\n    except json.JSONDecodeError:\n   \
          \     pass\n\n    # 如果上一步失败，说明可能是双重编码\n    # 再尝试解析一次\n    try:\n       \
          \ # 第一次解析\n        outer_data = json.loads(arg1)\n        # outer_data 可能是字符串，再解析一次\n\
          \        if isinstance(outer_data, str):\n            data = json.loads(outer_data)\n\
          \            if isinstance(data, dict) and \"result\" in data:\n       \
          \         return {\"result\": data[\"result\"]}\n    except json.JSONDecodeError:\n\
          \        pass\n\n    # 如果仍然失败，则返回空结构\n    return {\"result\": []}"
        code_language: python3
        desc: 将string格式转换为json，以便后续tts
        outputs:
          result:
            children: null
            type: array[object]
        selected: false
        title: 字符串转换为json
        type: code
        variables:
        - value_selector:
          - '17340633928110'
          - text
          variable: arg1
      height: 82
      id: '17340634090560'
      position:
        x: 3121.973196195107
        y: 872.317874447322
      positionAbsolute:
        x: 3121.973196195107
        y: 872.317874447322
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import requests\nimport json\n\ndef main(arg1: list) -> dict:\n   \
          \ # 将输入的列表包装成含有 \"result\" 键的字典\n    data = {\"result\": arg1}\n\n    #\
          \ 将 data 转换为 JSON 字符串\n    payload = json.dumps(data[\"result\"])\n\n  \
          \  # 定义 API URL 和请求头\n    url = \"https://genie.kofe.ai/ttsApi/agent-tts/batch-synthesize/en\"\
          \n    headers = {\n        'Content-Type': 'application/json'\n    }\n\n\
          \    try:\n        # 发送 POST 请求\n        response = requests.post(url, headers=headers,\
          \ data=payload, timeout=(120, 3840))\n        response.raise_for_status()\
          \  # 检查 HTTP 状态码\n\n        # 打印调试信息\n        print(f\"Response Status Code:\
          \ {response.status_code}\")\n        print(f\"Response Content: {response.text}\"\
          )\n    except requests.exceptions.RequestException as e:\n        raise\
          \ ValueError(f\"Request failed with error: {str(e)}\")\n\n    # 返回 JSON\
          \ 格式的响应数据\n    return {\"result\": response.json()['searchId']}"
        code_language: python3
        desc: tts调用
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 转换成TTS
        type: code
        variables:
        - value_selector:
          - '17340634090560'
          - result
          variable: arg1
      height: 82
      id: '17340634299250'
      position:
        x: 3448.067051840667
        y: 872.317874447322
      positionAbsolute:
        x: 3448.067051840667
        y: 872.317874447322
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: 根据输入内容返回文件名称，用于下载时命名
        model:
          completion_params:
            max_tokens: 16384
            temperature: 0.7
          mode: chat
          name: ea01-eus01-gpt-4o-mini-2024-07-18
          provider: azure_openai
        prompt_template:
        - id: b6994f00-c928-4896-b90e-e8b2e5ff3bcb
          role: system
          text: "content of the provided report：{{#1734058125744.text#}}\nSystem Prompt\
            \ for Task: Generating a Report Title for PDF Naming\n\nObjective:\nYou\
            \ are tasked with generating a concise and descriptive title in **English**\
            \ based on the content of the provided report. This title will be used\
            \ to name a PDF file for downloading the report. All spaces in the title\
            \ should be replaced with underscores (`_`).\n\n### Guidelines for Generating\
            \ the Title:\n\n1. **Length**:\n   - The title should be short and concise,\
            \ ideally **3-7 words**.\n   - Avoid using overly detailed or lengthy\
            \ phrases.\n\n2. **Language**:\n   - Always generate the title in **English**,\
            \ regardless of the report's language.\n\n3. **Content**:\n   - Focus\
            \ on capturing the main topic or subject of the report.\n   - If applicable,\
            \ include the name of the company, event, or key subject.\n   - Avoid\
            \ unnecessary details, such as dates or minor specifics, unless critical\
            \ to understanding the report.\n\n4. **Formatting**:\n   - Replace all\
            \ spaces with underscores (`_`).\n   - Use Title Case (capitalize major\
            \ words).\n   - Avoid special characters (e.g., `!`, `?`, `@`).\n\n5.\
            \ **Examples**:\n   - **Report Content**: \"This report discusses NVIDIA’s\
            \ market strategy and financial growth.\"\n     **Generated Title**: `NVIDIA_Market_Strategy_Analysis`\n\
            \   - **Report Content**: \"This analysis focuses on AI applications in\
            \ healthcare.\"\n     **Generated Title**: `AI_in_Healthcare_Analysis`\n\
            \   - **Report Content**: \"Analysis of Tesla’s recent developments and\
            \ competitive position.\"\n     **Generated Title**: `Tesla_Competitive_Position_Report`\n\
            \n6. **Key Rules**:\n   - Generate the title based only on the report's\
            \ content.\n   - Ensure the title is meaningful and represents the report\
            \ accurately.\n\n7. **Output**:\n   - Return only the title, without any\
            \ explanations or additional text.\n   - Example Output: `NVIDIA_Market_Strategy_Analysis`"
        - id: 0d8563ef-8ac9-4750-9281-1a93ed440641
          role: user
          text: 'Based on the following content:

            {{#1734058125744.text#}}'
        selected: false
        title: 返回文件名称
        type: llm
        variables: []
        vision:
          enabled: false
      height: 142
      id: '17340634608640'
      position:
        x: 2822.537682009213
        y: 653.3390089524754
      positionAbsolute:
        x: 2822.537682009213
        y: 653.3390089524754
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        author: 边沛佳
        desc: ''
        height: 125
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"1.
          判断4个数据源是否有输入，如果有输入则执行分析；如果没有输入，使用python代码生成null字符串","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"2.
          使用变量聚合器，将输出变量合并为1个，传递给下一步拼接","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"3.
          将4个数据源的输出变量拼接在一起，给后面的模型生成report","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: ''
        type: ''
        width: 640
      height: 125
      id: '1734064193317'
      position:
        x: -325.45404432991404
        y: 1073.5031747609642
      positionAbsolute:
        x: -325.45404432991404
        y: 1073.5031747609642
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 640
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: empty
            id: e53f1691-737a-448a-b060-4512b98979d7
            value: ''
            varType: string
            variable_selector:
            - '1733214305223'
            - URL
          - comparison_operator: empty
            id: 549fc3f4-545c-4140-ab02-9ddf3820d180
            value: ''
            varType: array[file]
            variable_selector:
            - '1733214305223'
            - input_files
          - comparison_operator: empty
            id: a6d9ae3a-7b2d-4b23-a39f-811ef29bd5ba
            value: ''
            varType: string
            variable_selector:
            - '1733214305223'
            - paste_text
          id: 'true'
          logical_operator: and
        desc: 判断输入内容
        selected: false
        title: 输入条件判断
        type: if-else
      height: 206
      id: '1734074141813'
      position:
        x: -363.2880416280717
        y: 606.1408739214955
      positionAbsolute:
        x: -363.2880416280717
        y: 606.1408739214955
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1734074816266'
          - result
          variable: null_result
        selected: false
        title: None input
        type: end
      height: 90
      id: '1734074489502'
      position:
        x: 240.71195837192835
        y: -23.30835366246521
      positionAbsolute:
        x: 240.71195837192835
        y: -23.30835366246521
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "def main() -> dict:\n    return {\n        \"result\": '提示：请至少提供一个输入源，以生成报告。例如，可以提供以下任意一种：URL\
          \ 爬取数据、上传文档、粘贴文本。\\n Notice: Please provide at least one input source to\
          \ generate the report. For example, you can provide any of the following:\
          \ URL data, uploaded documents,or pasted text.'\n    }"
        code_language: python3
        desc: 三种输入源都没有数据输入时，提醒用户输入
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 输入为null的时候的提示词
        type: code
        variables: []
      height: 98
      id: '1734074816266'
      position:
        x: -65.00076145071498
        y: 54.41018941009793
      positionAbsolute:
        x: -65.00076145071498
        y: 54.41018941009793
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        author: 李喆杨
        desc: ''
        height: 220
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"Usage:","type":"text","version":1},{"type":"linebreak","version":1},{"detail":0,"format":0,"mode":"normal","style":"","text":"1.
          用户可以选择URL, files, paste text其中的任何1-3种输入数据的方式，将数据传入进去。但不能同时为空，如果三个数据源都为空，则会返回提示。","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"2.
          用户可以选择生成音频的类型，双人的播客，或者单人的演讲","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"3.
          用户如果有自定义的prompt可以添加在user_instruction中","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0},{"children":[],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"parameter
          sample:","type":"text","version":1},{"type":"linebreak","version":1},{"detail":0,"format":0,"mode":"normal","style":"","text":"URL：https://www.nvidia.com/en-us/","type":"text","version":1},{"type":"linebreak","version":1},{"detail":0,"format":0,"mode":"normal","style":"","text":"Files：files","type":"text","version":1},{"type":"linebreak","version":1},{"detail":0,"format":0,"mode":"normal","style":"","text":"paste_text：英伟达™（NVIDIA®）是加速计算领域的先驱，致力于解决其他公司无法解决的难题。我们在人工智能和元宇宙领域的工作正在深刻地影响着社会，并改变着世界上最大的行业--从游戏到机器人技术、从自动驾驶汽车到挽救生命的医疗保健、从气候变化到我们都能连接和创造的虚拟世界。加速计算需要从芯片架构、系统、加速库到应用程序重构的全栈优化。英伟达™（NVIDIA®）的全球生态系统涵盖400万开发人员、4万家公司和3000多个应用程序。点燃人工智能的iPhone时刻。深度学习的加速点燃了人工智能的大爆炸。由
          NVIDIA DGX™ AI 超级计算机提供支持的大型语言模型 ChatGPT 在短短两个月内就拥有了 1 亿用户。其神奇的能力吸引了全世界的目光。生成式人工智能是一个全新的计算平台，就像个人电脑、互联网和移动云一样。加速计算和人工智能已经全面到来。推动全球最大产业的发展。英伟达™（NVIDIA®）加速库解决了新的挑战，开辟了新的市场。它们与应用相连，而应用又与全球各行各业相连，形成了一个网络之网。最近，我们推出了英伟达™（NVIDIA®）cuLitho，这是一个全新的加速库，可为计算光刻技术（芯片设计与制造中的一项巨大计算工作量）提供超级动力。英伟达目前提供约300个加速库。跃入云端。英伟达™（NVIDIA®）加速计算可在各种云中使用。DGX
          Cloud 和 NVIDIA AI Enterprise 使我们无与伦比的 AI 能力能够为每个人所用。NVIDIA AI Foundations
          是一项用于构建自定义语言模型和生成式人工智能的云服务。NVIDIA Omniverse Cloud 将加速全球最大行业的数字化进程。英伟达™（NVIDIA®）加速计算是可持续计算
          数据中心的耗电量已经占到全球耗电量的 1-2%，而且预计耗电量还将继续增长。这种持续增长是不可持续的。如果我们在全球范围内将加速计算工作负载从仅使用CPU的服务器转换到GPU加速系统，预计每年可节约近12万亿瓦时的能源，相当于近170万个美国家庭的用电需求。加速是回收电力、实现可持续发展和净零排放的最佳途径。","type":"text","version":1},{"type":"linebreak","version":1},{"detail":0,"format":0,"mode":"normal","style":"","text":"instruction:
          请你帮我重点分析财务情况","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: ''
        type: ''
        width: 476
      height: 220
      id: '1734593679844'
      position:
        x: -889.9944392033998
        y: 929.182757745857
      positionAbsolute:
        x: -889.9944392033998
        y: 929.182757745857
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 476
    - data:
        desc: 深度爬取URL中的信息
        provider_id: kofe
        provider_name: kofe
        provider_type: builtin
        selected: false
        title: 深度爬取
        tool_configurations:
          excludePaths: blog/*,news/*,press/*,facebook.com/*,twitter.com/*,linkedin.com/*,instagram.com/*,comments/*,forum/*,reviews/*,privacy-policy,terms-of-service,terms-and-conditions,login,signup,register,cart,checkout,search,query,ads/*,promo/*,404,error,api/*,ajax/*,video/*,audio/*,sitemap,robots.txt,temp/*,test/*
          excludeTags: selection,img,h3,link,button,script,a,style,iframe,#ad,#footer
          limit: 10
          maxDepth: 5
          onlyMainContent: 0
          waitFor: 60000
        tool_label: Kofe Crawler
        tool_name: crawl
        tool_parameters:
          url:
            type: mixed
            value: '{{#1733214305223.URL#}}'
        type: tool
      height: 248
      id: '1735027091448'
      position:
        x: 779.1169703987326
        y: 118.01993890905732
      positionAbsolute:
        x: 779.1169703987326
        y: 118.01993890905732
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1734062221207'
          - output
        desc: 分析所有输出，生成学习指南，包括简答题，论述题和词汇表
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: ea01-eus01-gpt-4o-2024-08-06
          provider: azure_openai
        prompt_template:
        - id: fcaf3b8a-543f-4a48-ba86-a9e0e3963a93
          role: system
          text: "请根据以下输入文本内容{{#1734061280329.result#}}生成一个详细的‘学习指南’，重点对文本的核心知识点进行总结，避免采用问答形式。学习指南应具有以下结构：\n\
            \n\n1. **核心概念总结：**\n- 提炼输入文本中的关键主题或核心概念。\n- 每个核心概念需简明扼要地定义或解释，便于读者快速理解。\n\
            \n\n2. **技术应用及特点：**\n- 阐述输入文本中提及的技术方法、工具或框架的主要应用场景。\n- 说明其特点、优势以及在实际问题中的适用性。\n\
            \n\n3. **关键数据与事实：**\n- 提取并总结文本中的重要数据、实验结果或关键事实。\n- 数据总结需简洁清晰，便于读者掌握具体细节。\n\
            \n\n4. **潜在挑战与未来方向：**\n- 总结文本中提及的挑战或局限性（如技术难点、性能瓶颈等）。\n- 结合文本内容，对相关技术或主题的未来发展方向进行简要分析。\n\
            \n\n**输出语言要求：**\n 变量{{#1733214305223.language#}}用于指定输出报告的语言。无论输入内容使用何种语言，输出报告都必须严格按照变量指定的语言生成，即使输入语言与指定语言不同，输出内容也必须完全遵循变量语言的要求。\n\
            \n\n**格式要求：**\n- 使用标题“学习指南”或“Learning Guide”。\n- 按照上述结构分段，每个部分使用清晰的标题标注，标题语言对应输出语言。\n\
            \n\n**注意：**\n- 学习指南应以教学和学习目标为导向，帮助读者系统性掌握文本内容。\n- 输出内容条理分明，适合直接阅读和使用。\n\
            - 优先满足{{#context#}}中要求生成内容输出\n- 输出报告的语言为{{#1733214305223.language#}}"
        selected: false
        title: 学习指南
        type: llm
        variables: []
        vision:
          enabled: false
      height: 142
      id: '1735805654023'
      position:
        x: 2810.537682009213
        y: 1034.2740105329506
      positionAbsolute:
        x: 2810.537682009213
        y: 1034.2740105329506
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: 分析所有输出，生成常见问题解答
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: ea01-eus01-gpt-4o-2024-08-06
          provider: azure_openai
        prompt_template:
        - id: 814881d9-0bf2-448a-9ecd-a86c4c905a0f
          role: system
          text: "请根据以下输入文本内容{{#1734061280329.result#}}生成“常见问题解答”部分，并确保输出语言与输入语言一致（即，输入为中文则生成中文内容，输入为英文则生成英文内容）。输出内容结构如下：\n\
            \n1. **提取问题：**\n- 根据文本内容，提炼出与主题密切相关的 8-10 个关键问题。\n- 每个问题应围绕文本的核心概念、技术或应用展开，问题要简洁明了。\n\
            \n2. **提供回答：**\n- 为每个问题提供直接、简洁的回答。回答内容基于文本信息，准确且清晰。\n\n**输出语言要求：**\n 变量{{#1733214305223.language#}}用于指定输出报告的语言。无论输入内容使用何种语言，输出报告都必须严格按照变量指定的语言生成，即使输入语言与指定语言不同，输出内容也必须完全遵循变量语言的要求。\n\
            \n**格式要求：**\n- 使用标题“常见问题解答”或者“FAQ”\n- 使用清晰的编号列出问题和回答，例如：\n- **问题 1**：公司如何推动可持续发展？\n\
            **回答**：公司通过加速计算技术减少能源消耗。\n- 或：\n- **Question 1**: How does the company\
            \ promote sustainability? \n**Answer**: The company reduces energy consumption\
            \ through accelerated computing technology.\n\n**注意：**\n- 提炼的问题应具体实用，避免模糊或过于笼统。\n\
            - 回答应基于文本核心信息，避免过多扩展或脱离主题。\n- 输出报告的语言为{{#1733214305223.language#}}"
        selected: false
        title: 常见问题解答
        type: llm
        variables: []
        vision:
          enabled: false
      height: 126
      id: '1735805695745'
      position:
        x: 2810.537682009213
        y: 1234.317874447322
      positionAbsolute:
        x: 2810.537682009213
        y: 1234.317874447322
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1734062221207'
          - output
        desc: 分析所有输出，生成时间轴
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: ea01-eus01-gpt-4o-2024-08-06
          provider: azure_openai
        prompt_template:
        - id: 94ce847d-827c-410b-a0de-c057ce00636b
          role: system
          text: "请根据以下输入文本内容 {{#1734061280329.result#}} 生成‘时间轴’部分。并确保输出语言与输入语言一致（即，输入为中文则生成中文内容，输入为英文则生成英文内容）。内容应根据输入文本判断是否包含具体的时间信息，并选择适当的输出形式：\n\
            \n\n1. **如果文本中包含具体的时间点：**\n   - 提取文本中的时间点及相关事件，并按时间顺序组织，生成时间轴。\n   - 时间轴内容应简洁明了，每个时间点描述一个关键事件，突出事件的背景或影响。\n\
            \n\n2. **如果文本中不包含具体的时间点：**\n   - 根据文本内容总结主题的发展趋势、当前状况或未来展望。\n   - 内容应围绕输入文本的核心主题，使用清晰的短句概括主要信息点。\n\
            \   - 可包含对发展过程的总结或关键事件的归纳，但避免假设具体的时间点。\n\n\n**输出语言要求：**\n 变量{{#1733214305223.language#}}用于指定输出报告的语言。无论输入内容使用何种语言，输出报告都必须严格按照变量指定的语言生成，即使输入语言与指定语言不同，输出内容也必须完全遵循变量语言的要求。\n\
            \n\n**格式要求：**\n- 时间轴形式（如适用）：使用清晰的时间点列出每个事件，例如：\n  - 2020 年：公司发布新产品 X，推动了市场增长。\n\
            \  - 2021 年：宣布合作项目 Y，拓展了新兴技术领域。\n- 趋势总结形式（如适用）：按照条目列出当前发展状况、未来展望或关键事件，例如：\n\
            \  - 持续进行中：公司收入在云计算领域保持增长。\n  - 未来展望：将加强 AI 和云计算领域的研发投入。\n\n\n**注意：**\n\
            - 确保生成的内容清晰、有条理，易于理解。\n- 如果文本内容未明确提到关键事件或时间点，可根据语境合理总结趋势或现状。”\n- 优先满足{{#context#}}中要求生成内容输出\n\
            - 输出报告的语言为{{#1733214305223.language#}}"
        selected: false
        title: 时间轴
        type: llm
        variables: []
        vision:
          enabled: false
      height: 126
      id: '1735805740473'
      position:
        x: 2810.537682009213
        y: 1394.3234877129225
      positionAbsolute:
        x: 2810.537682009213
        y: 1394.3234877129225
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    viewport:
      x: 344.5281422306029
      y: 172.09802241375712
      zoom: 0.29270299838277025
